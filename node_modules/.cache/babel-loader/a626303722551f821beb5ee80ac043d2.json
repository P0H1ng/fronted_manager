{"remainingRequest":"/home/kali/fronted_manager/node_modules/babel-loader/lib/index.js!/home/kali/fronted_manager/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/kali/fronted_manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kali/fronted_manager/src/views/GameBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kali/fronted_manager/src/views/GameBox.vue","mtime":1718175608455},{"path":"/home/kali/fronted_manager/node_modules/cache-loader/dist/cjs.js","mtime":1718174862074},{"path":"/home/kali/fronted_manager/node_modules/babel-loader/lib/index.js","mtime":1718174862030},{"path":"/home/kali/fronted_manager/node_modules/cache-loader/dist/cjs.js","mtime":1718174862074},{"path":"/home/kali/fronted_manager/node_modules/vue-loader/lib/index.js","mtime":1718174862613}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["GameBox.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-dropdown style=\"margin-right: 10px;\" @command=\"(command) => {\n            switch(command){\n                case 'remote-gamebox': newGameBoxDialogVisible = true; return;\n                case 'from-docker': dockerImageVisible = true; return;\n            }\n        }\">\n      <el-button type=\"primary\">\n        {{ $t('gamebox.publish') }}<i class=\"el-icon-arrow-down el-icon--right\"></i>\n      </el-button>\n      <el-dropdown-menu slot=\"dropdown\">\n        <el-dropdown-item command=\"remote-gamebox\">{{ $t('gamebox.publish_out') }}</el-dropdown-item>\n        <!--                <el-dropdown-item command=\"from-docker\">從Docker佈署靶機</el-dropdown-item>-->\n      </el-dropdown-menu>\n    </el-dropdown>\n    <el-button @click=\"testAllSSH\" :loading=\"sshTesting\">{{ $t('gamebox.test_ssh') }}</el-button>\n    <el-button @click=\"refreshFlag\">{{ $t('gamebox.refresh_flag') }}</el-button>\n    <el-popconfirm\n        :confirm-button-text=\"$t('general.apply')\"\n        :cancel-button-text=\"$t('general.cancel')\"\n        icon=\"el-icon-info\"\n        icon-color=\"red\"\n        :title=\"$t('gamebox.reset_confirm')\"\n        @onConfirm=\"resetGameBox\"\n    >\n      <el-button slot=\"reference\" type=\"danger\" style=\"margin-left: 10px;\">{{ $t('gamebox.reset') }}</el-button>\n    </el-popconfirm>\n\n    <!-- Gamebox list -->\n    <el-table :data=\"gameBoxList\" style=\"width: 100%\" stripe v-loading=\"gameBoxList === null\">\n      <el-table-column width=\"80\" prop=\"ID\" label=\"ID\"/>\n      <el-table-column prop=\"ChallengeTitle\" :label=\"$t('gamebox.challenge')\"/>\n      <el-table-column prop=\"TeamName\" :label=\"$t('gamebox.team')\"/>\n      <el-table-column prop=\"IP\" :label=\"$t('gamebox.ip')\"/>\n      <el-table-column prop=\"Port\" :label=\"$t('gamebox.port')\"/>\n      <el-table-column prop=\"Score\" :label=\"$t('gamebox.score')\"\n                       :formatter=\"(row) => utils.FormatFloat(row.Score)\"/>\n      <el-table-column prop=\"Description\" :label=\"$t('gamebox.description')\"/>\n      <el-table-column prop=\"IsDown\" :label=\"$t('gamebox.down')\">\n        <template slot-scope=\"scope\">{{ scope.row.IsDown }}</template>\n      </el-table-column>\n      <el-table-column prop=\"IsAttacked\" :label=\"$t('gamebox.attacked')\">\n        <template slot-scope=\"scope\">{{ scope.row.IsAttacked }}</template>\n      </el-table-column>\n      <el-table-column :label=\"$t('general.create_at')\" width=\"200\"\n                       :formatter=\"(row)=>utils.FormatGoTime(row.CreatedAt)\"/>\n      <el-table-column :label=\"$t('general.operate')\" width=\"300\">\n        <template slot-scope=\"scope\">\n          <el-button\n              size=\"mini\"\n              @click=\"()=>{editGameBoxForm = JSON.parse(JSON.stringify(scope.row)); editGameBoxDialogVisible = true}\">\n            {{ $t('general.edit') }}\n          </el-button>\n          <el-popconfirm\n              :confirmButtonText=\"$t('general.confirm_cancel')\"\n              :cancelButtonText=\"$t('general.cancel')\"\n              icon=\"el-icon-info\"\n              iconColor=\"red\"\n              :title=\"$t('gamebox.delete_title')\"\n              @onConfirm=\"handleDelete(scope.row)\"\n          >\n            <el-button size=\"mini\" type=\"danger\" slot=\"reference\">{{ $t('general.delete') }}\n            </el-button>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <br>\n    <el-pagination style=\"text-align:center\" background layout=\"prev, pager, next\" :total=\"total\" :page-size=\"per\"\n                   @current-change=\"(p)=>{page = p; getGameBoxes()}\"></el-pagination>\n\n    <!-- New GameBox from remote -->\n    <el-dialog :title=\"$t('gamebox.publish')\" :visible.sync=\"newGameBoxDialogVisible\">\n      <el-button type=\"primary\" @click=\"mutliGameBoxDialogVisible = true\">{{ $t('gamebox.multi') }}</el-button>\n      <el-button @click=\"newGameBoxForm.push({\n                    ChallengeID: null,\n                    TeamID: null,\n                    IP: '',\n                    Port: '',\n                    SSHPort: '',\n                    SSHUser:'root',\n                    SSHPassword: '',\n                    Description: ''\n                })\">{{ $t('gamebox.add') }}\n      </el-button>\n      <el-divider/>\n      <div v-for=\"(item, index) in newGameBoxForm\" v-bind:key=\"index\">\n        <el-row :gutter=\"20\">\n          <el-form :model=\"item\" label-width=\"130px\">\n            <el-button type=\"danger\" icon=\"el-icon-delete\" circle @click=\"newGameBoxForm.splice(index, 1)\"/>\n            <el-col :span=\"10\">\n              <el-form-item :label=\"$t('gamebox.challenge')\">\n                <el-select v-model=\"item.ChallengeID\"\n                           :placeholder=\"$t('gamebox.challenge_placeholder')\">\n                  <el-option\n                      v-for=\"challenge in challenges\"\n                      :key=\"challenge.ID\"\n                      :label=\"challenge.Title\"\n                      :value=\"challenge.ID\">\n                  </el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-form-item :label=\"$t('gamebox.team')\">\n                <el-select v-model=\"item.TeamID\" :placeholder=\"$t('gamebox.team_placeholder')\">\n                  <el-option\n                      v-for=\"team in teams\"\n                      :key=\"team.ID\"\n                      :label=\"team.Name\"\n                      :value=\"team.ID\">\n                  </el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-form-item :label=\"$t('gamebox.ip')\">\n                <el-input v-model=\"item.IP\" :placeholder=\"$t('gamebox.ip_placeholder')\"></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-form-item :label=\"$t('gamebox.port')\">\n                <el-input v-model=\"item.Port\" :placeholder=\"$t('gamebox.port_placeholder')\"></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-form-item :label=\"$t('gamebox.description')\">\n                <el-input type=\"textarea\" :rows=\"3\" :placeholder=\"$t('gamebox.description_placeholder')\"\n                          v-model=\"item.Description\">\n                </el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"7\">\n              <el-form-item :label=\"$t('gamebox.ssh_port')\">\n                <el-input v-model=\"item.SSHPort\"></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"7\">\n              <el-form-item :label=\"$t('gamebox.ssh_user')\">\n                <el-input v-model=\"item.SSHUser\"></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"9\">\n              <el-form-item :label=\"$t('gamebox.ssh_password')\">\n                <el-input v-model=\"item.SSHPassword\"></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col>\n              <el-divider></el-divider>\n            </el-col>\n          </el-form>\n        </el-row>\n\n      </div>\n      <el-button type=\"primary\" @click=\"onNewGameBox\">{{ $t('gamebox.publish') }}</el-button>\n    </el-dialog>\n\n    <!-- Multi -->\n    <el-dialog :title=\"$t('gamebox.multi')\" :visible.sync=\"mutliGameBoxDialogVisible\">\n            <span>\n                {{ $t('gamebox.format') }}\n                <code>[{\n                    \"ChallengeID\": 1,\n                    \"TeamID\": 1,\n                    \"IP\": \"\",\n                    \"Port\": \"\",\n                    \"SSHPort\": \"\",\n                    \"SSHUser\": \"\",\n                    \"SSHPassword\": \"\",\n                    \"Description\": \"\"\n                }]</code>\n            </span>\n      <el-form>\n        <el-form-item :label=\"$t('gamebox.json_string')\">\n          <el-input type=\"textarea\" v-model=\"mutliGameBoxJSON\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"mutliGameBoxDialogVisible = false\">{{ $t('general.cancel') }}</el-button>\n        <el-button type=\"primary\" @click=\"mutliGameBox\">{{ $t('general.apply') }}</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- Edit -->\n    <el-dialog :title=\"$t('gamebox.edit')\" :visible.sync=\"editGameBoxDialogVisible\">\n      <el-form label-width=\"120px\">\n        <el-form-item :label=\"$t('gamebox.challenge')\">\n          {{ editGameBoxForm.ChallengeTitle }}\n        </el-form-item>\n        <el-form-item :label=\"$t('gamebox.team')\">\n          {{ editGameBoxForm.TeamName }}\n        </el-form-item>\n        <el-form-item :label=\"$t('gamebox.ip')\">\n          <el-input v-model=\"editGameBoxForm.IP\"\n                    :placeholder=\"$t('gamebox.ip_placeholder')\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('gamebox.port')\">\n          <el-input v-model=\"editGameBoxForm.Port\"\n                    :placeholder=\"$t('gamebox.port_placeholder')\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('gamebox.description')\">\n          <el-input type=\"textarea\" :rows=\"3\" :placeholder=\"$t('gamebox.description_placeholder')\"\n                    v-model=\"editGameBoxForm.Description\">\n          </el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('gamebox.ssh_port')\">\n          <el-input v-model=\"editGameBoxForm.SSHPort\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('gamebox.ssh_user')\">\n          <el-input v-model=\"editGameBoxForm.SSHUser\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('gamebox.ssh_password')\">\n          <el-input v-model=\"editGameBoxForm.SSHPassword\"></el-input>\n        </el-form-item>\n      </el-form>\n      <el-button type=\"primary\" @click=\"onEditGameBox\">{{ $t('gamebox.edit') }}</el-button>\n      <el-button\n          @click=\"testGameBoxSSH(editGameBoxForm.IP, editGameBoxForm.SSHPort, editGameBoxForm.SSHUser, editGameBoxForm.SSHPassword)\">\n        {{ $t('gamebox.test_ssh') }}\n      </el-button>\n    </el-dialog>\n\n    <!-- SSH -->\n    <el-dialog :title=\"$t('gamebox.test_ssh_fail')\" :visible.sync=\"sshFailDialogVisible\">\n      <div v-html=\"sshFailContent\"></div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"sshFailDialogVisible = false\">{{ $t('general.apply') }}</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- New GameBox from docker -->\n    <el-dialog title=\"從Docker佈署題目\" :visible.sync=\"dockerImageVisible\" width=\"70%\">\n      <el-form v-loading=\"loadingDockerfile\">\n        <el-input placeholder=\"your_name/web_challenge:latest\" v-model=\"dockerImageText\">\n          <template slot=\"prepend\">docker pull</template>\n          <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getImageData\">獲取靶機資訊</el-button>\n        </el-input>\n      </el-form>\n      <br>\n      <div v-if=\"dockerInfo != null\">\n        <el-row :gutter=\"24\">\n          <el-col :span=\"12\">\n            <el-form :inline=\"true\" label-width=\"120px\">\n              <!-- Challenge -->\n              <el-form-item :label=\"$t('gamebox.challenge_placeholder')\">\n                <el-select v-model=\"dockerForm.Challenge\"\n                           :placeholder=\"$t('gamebox.challenge_placeholder')\">\n                  <el-option\n                      v-for=\"challenge in challenges\"\n                      :key=\"challenge.ID\"\n                      :label=\"challenge.Title\"\n                      :value=\"challenge.ID\">\n                  </el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item label=\"Docker IP\">\n                <el-input placeholder=\"Docker IP\" v-model=\"dockerForm.IP\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"Docker Port\">\n                <el-input placeholder=\"Docker Port\" v-model=\"dockerForm.ServicePort\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"Docker SSH Port\">\n                <el-input placeholder=\"Docker SSH Port\" v-model=\"dockerForm.SSHPort\"></el-input>\n              </el-form-item>\n              <br>\n              <div style=\"text-align: center; color:rgba(128,128,128,0.50);\">SSH 密碼將自動產生</div>\n            </el-form>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form :inline=\"true\" label-width=\"120px\">\n              <el-form-item label=\"root SSH Username\">\n                <el-input placeholder=\"root SSH Username\" v-model=\"dockerForm.RootSSHName\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"選手 SSH Username\">\n                <el-input placeholder=\"選手 SSH Username\" v-model=\"dockerForm.UserSSHName\"></el-input>\n              </el-form-item>\n            </el-form>\n            題目描述\n            <el-input\n                :rows=\"5\"\n                type=\"textarea\"\n                placeholder=\"請輸入內容\"\n                v-model=\"dockerForm.Description\">\n            </el-input>\n          </el-col>\n        </el-row>\n\n        <el-divider content-position=\"left\">Port映射</el-divider>\n        <!-- Ports -->\n        <el-form :inline=\"true\" label-width=\"30px\">\n          <el-form-item v-for=\"(port, index) in dockerForm.Ports\" v-bind:key=\"index\"\n                        style=\"margin-bottom: 0px;\">\n            <el-input style=\"width: 180px;\" placeholder=\"映射Port\" v-model=\"port.Out\" size=\"mini\" :min=\"1\"\n                      :max=\"65535\">\n              <template slot=\"append\"> -> {{ port.In }}\n                <el-button icon=\"el-icon-error\" @click=\"dockerForm.Ports.splice(index, 1)\"></el-button>\n              </template>\n            </el-input>\n          </el-form-item>\n        </el-form>\n        <el-form :inline=\"true\" label-width=\"30px\">\n          <el-form-item>\n            <!-- New port input -->\n            <el-input\n                v-if=\"inputPortVisible\"\n                v-model=\"inputPortValue\"\n                ref=\"portInput\"\n                size=\"mini\"\n                @keyup.enter.native=\"inputPortConfirm\"\n                @blur=\"inputPortConfirm\"\n                minlength=\"1\"\n                maxlength=\"5\"\n                label=\"Docker Port\"\n            >\n            </el-input>\n            <el-button v-else size=\"mini\" @click=\"()=>{\n                            inputPortVisible = true;\n                            this.$nextTick(_ => {\n                              this.$refs.portInput.$refs.input.focus();\n                            });\n                        }\">+ 新增 Port\n            </el-button>\n          </el-form-item>\n        </el-form>\n\n        <!-- container info -->\n        <el-table\n            size=\"mini\"\n            :data=\"teams\"\n            stripe\n            max-height=\"300\"\n            style=\"width: 100%\">\n          <el-table-column\n              prop=\"Name\"\n              label=\"隊伍名稱\"\n              width=\"180\">\n          </el-table-column>\n          <el-table-column label=\"Port設置\">\n            <template slot-scope=\"scope\">\n              <el-tag\n                  size=\"mini\"\n                  v-for=\"(port, index) in dockerForm.Ports\"\n                  :key=\"index\"\n                  effect=\"plain\"\n                  style=\"margin-right: 10px;\"\n              >\n                {{ Number(port.Out) + scope.$index }} -> {{ port.In }}\n              </el-tag>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"Docker容器名稱\">\n            <template slot-scope=\"scope\">\n              {{ dockerInfo.Name }}_{{ scope.row.Name }}\n            </template>\n          </el-table-column>\n        </el-table>\n\n      </div>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dockerImageVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"deployFromDocker\">新增</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"GameBox\",\n  data: () => ({\n    newGameBoxDialogVisible: false,\n    editGameBoxDialogVisible: false,\n    mutliGameBoxDialogVisible: false,\n    sshFailDialogVisible: false,\n    sshTesting: false,\n\n    gameBoxList: null,\n    teams: [],\n    challenges: [],\n\n    newGameBoxForm: [],\n    editGameBoxForm: {\n      ChallengeTitle: '',\n      TeamName: '',\n      IP: '',\n      Port: '',\n      SSHPort: '',\n      SSHUser: '',\n      SSHPassword: '',\n      Description: ''\n    },\n\n    // Docker\n    loadingDockerfile: false,\n    dockerImageVisible: false,\n    inputPortVisible: false,\n    inputPortValue: '',\n    dockerImageText: 'wuhan005/awd_web:latest',\n    dockerImageForm: {      // search form\n      User: '',\n      Image: '',\n      Tag: ''\n    },\n    dockerInfo: null,      // dockerfile info\n    dockerForm: {\n      Image: '',\n      Challenge: null,\n      IP: '',\n      ServicePort: '',\n      SSHPort: '',\n      RootSSHName: '',\n      UserSSHName: '',\n      Description: `SSH Port：{{ssh_port}}\nSSH Username：{{ssh_name}}\nSSH Password：{{ssh_password}}`,\n      Ports: []\n    },\n\n    mutliGameBoxJSON: '',\n    sshFailContent: '',\n\n    page: 1,\n    per: 10,\n\n    total: 0,\n  }),\n  async mounted() {\n    await this.getTeams()\n    await this.getChallenges()\n    await this.getGameBoxes()\n  },\n  methods: {\n    getGameBoxes() {\n      return new Promise((resolve) => {\n        this.utils.GET(`/manager/gameboxes?page=${this.page}&per=${this.per}`).then(res => {\n          let gameBox = res.Data\n          gameBox.forEach((value, index) => {\n            gameBox[index]['ChallengeTitle'] = this.getChallengeByID(value.ChallengeID)['Title']\n            gameBox[index]['TeamName'] = this.getTeamByID(value.TeamID)['Name']\n          })\n          this.gameBoxList = gameBox\n          this.total = res.Total\n          resolve()\n        }).catch(err => {\n          this.$message.error(err);\n          resolve()\n        })\n      })\n    },\n\n    getTeams() {\n      return new Promise((resolve) => {\n        this.utils.GET(\"/manager/teams\").then(res => {\n          this.teams = res\n          resolve()\n        }).catch(err => {\n          this.$message.error(err);\n          resolve()\n        })\n      })\n    },\n\n    async getChallenges() {\n      return new Promise((resolve) => {\n        this.utils.GET(\"/manager/challenges\").then(res => {\n          this.challenges = res\n          resolve()\n        }).catch(err => {\n          this.$message.error(err);\n          resolve()\n        })\n      })\n    },\n\n    mutliGameBox() {\n      let backup = JSON.parse(JSON.stringify(this.newGameBoxForm))\n      try {\n        let gameBoxes = JSON.parse(this.mutliGameBoxJSON)\n        gameBoxes.forEach((value) => {\n          this.newGameBoxForm.push({\n            ChallengeID: value.ChallengeID,\n            TeamID: value.TeamID,\n            IP: value.IP,\n            Port: value.Port,\n            SSHPort: value.SSHPort !== undefined ? value.SSHPort : '',\n            SSHUser: value.SSHUser !== undefined ? value.SSHUser : '',\n            SSHPassword: value.SSHPassword !== undefined ? value.SSHPassword : '',\n            Description: value.Description\n          })\n        })\n        this.mutliGameBoxDialogVisible = false\n        this.mutliGameBoxJSON = ''\n      } catch (e) {\n        this.$message.error(this.$i18n.t('gamebox.json_parse_error'))\n        this.newGameBoxForm = backup\n      }\n    },\n\n    onNewGameBox() {\n      this.utils.POST('/manager/gameboxes', this.newGameBoxForm).then(res => {\n        this.newGameBoxDialogVisible = false\n        this.getGameBoxes()\n        // Clean form\n        this.newGameBoxForm = []\n        this.$message({message: res, type: 'success'})\n      }).catch(err => this.$message.error(err))\n    },\n\n    onEditGameBox() {\n      this.utils.PUT('/manager/gamebox', this.editGameBoxForm).then(res => {\n        this.editGameBoxDialogVisible = false\n        this.getGameBoxes()\n        this.$message.success(res)\n      }).catch(err => this.$message.error(err))\n    },\n\n    handleDelete(row) {\n      this.utils.DELETE(\"/manager/gamebox?id=\" + row.ID).then(res => {\n        this.$message({\n          message: res,\n          type: 'success'\n        });\n        this.getGameBoxes()\n      }).catch(err => this.$message({message: err, type: 'error'}))\n    },\n\n    getChallengeByID(id) {\n      let result = null;\n      this.challenges.forEach((value) => {\n        if (value.ID === id) {\n          result = value\n        }\n      })\n      return result\n    },\n\n    getTeamByID(id) {\n      let result = null;\n      this.teams.forEach((value) => {\n        if (value.ID === id) {\n          result = value\n        }\n      })\n      return result\n    },\n\n    getImageData() {\n      this.loadingDockerfile = true\n      this.dockerImageForm.User = this.dockerImageText.split('/')[0]\n      this.dockerImageForm.Image = this.dockerImageText.split('/')[1].split(':')[0]\n      this.dockerImageForm.Tag = this.dockerImageText.split(':')[1]\n\n      this.utils.POST('/manager/docker/findImage', this.dockerImageForm).then(res => {\n        this.loadingDockerfile = false\n        // Set port\n        for (let i = 0; i < res.Ports.length; i++) {\n          this.dockerForm.Ports.push({In: res.Ports[i], Out: 10000 + i * 1000})\n        }\n        this.dockerForm.Image = res.Image\n        this.dockerInfo = res\n      }).catch(err => {\n        this.$message({message: err, type: 'error'});\n        this.loadingDockerfile = false\n      })\n    },\n\n    // Add new port\n    inputPortConfirm() {\n      let inputValue = this.inputPortValue;\n      if (inputValue) {\n        this.dockerForm.Ports.push({In: inputValue, Out: 0});\n      }\n      this.inputPortVisible = false;\n      this.inputPortValue = '';\n    },\n\n    deployFromDocker() {\n      this.utils.POST('/manager/docker/deploy', this.dockerForm).then(res => {\n        console.log(res)\n      }).catch(err => this.$message({message: err, type: 'error'}))\n    },\n\n    testAllSSH() {\n      this.sshTesting = true\n      this.utils.GET(\"/manager/gameboxes/sshTest\").then(res => {\n        this.sshTesting = false\n        if (res === null) {\n          return this.$message.success(this.$i18n.t(\"gamebox.test_ssh_success\"))\n        }\n\n        this.sshFailContent = ''\n        res.forEach(item => {\n          this.sshFailContent += `<strong>TeamID：</strong>${item.TeamID}<br><strong>ChallengeID：</strong>${item.ChallengeID}<br><strong>GameBoxID：</strong>${item.GameBoxID}<br><strong>Error：</strong>${item.Error}<hr>`\n        })\n        this.sshFailDialogVisible = true\n      })\n    },\n\n    testGameBoxSSH(IP, Port, User, Password) {\n      this.$prompt(this.$t('gamebox.input_shell_command'), '', {\n        confirmButtonText: this.$t('general.apply'),\n        cancelButtonText: this.$t('general.cancel'),\n      }).then(({value: Command}) => {\n        this.utils.POST('/manager/gameboxes/sshTest', {\n          IP, Port, User, Password, Command\n        }).then(res => this.$alert(res, this.$t('general.success'))\n        ).catch(err => this.$alert(err, this.$t('general.fail'))\n        )\n      }).catch(() => {\n      });\n    },\n\n    refreshFlag() {\n      this.utils.GET('/manager/gameboxes/refreshFlag')\n          .then(res => this.$message.success(res))\n          .catch(err => this.$message.error(err))\n    },\n\n    resetGameBox() {\n      this.utils.GET('/manager/gameboxes/reset')\n          .then(res => this.$message.success(res))\n          .catch(err => this.$message.error(err))\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/views"}]}