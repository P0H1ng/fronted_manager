{"remainingRequest":"/home/kali/fronted_manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kali/fronted_manager/src/views/Manager.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kali/fronted_manager/src/views/Manager.vue","mtime":1718174862663},{"path":"/home/kali/fronted_manager/node_modules/cache-loader/dist/cjs.js","mtime":1725805665522},{"path":"/home/kali/fronted_manager/node_modules/babel-loader/lib/index.js","mtime":1725805665488},{"path":"/home/kali/fronted_manager/node_modules/cache-loader/dist/cjs.js","mtime":1725805665522},{"path":"/home/kali/fronted_manager/node_modules/vue-loader/lib/index.js","mtime":1725805708031}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJNYW5hZ2VyIiwKCiAgICBkYXRhOiAoKSA9PiAoewogICAgICAgIHRva2VuOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbWFuYWdlclRva2VuJyksCiAgICAgICAgbmV3TWFuYWdlckRpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICAgIG1hbmFnZXJMaXN0OiBudWxsLAoKICAgICAgICBuZXdNYW5hZ2VyRm9ybTogewogICAgICAgICAgICBOYW1lOiAnJywKICAgICAgICAgICAgUGFzc3dvcmQ6ICcnLAogICAgICAgICAgICBJc0NoZWNrOiBmYWxzZSwKICAgICAgICB9LAogICAgfSksCgogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLmdldE1hbmFnZXIoKQogICAgfSwKCiAgICBtZXRob2RzOiB7CiAgICAgICAgZ2V0TWFuYWdlcigpIHsKICAgICAgICAgICAgdGhpcy51dGlscy5HRVQoJy9tYW5hZ2VyL21hbmFnZXJzJykudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgdGhpcy5tYW5hZ2VyTGlzdCA9IHJlcwogICAgICAgICAgICB9KS5jYXRjaChlcnIgPT4gdGhpcy4kbWVzc2FnZS5lcnJvcihlcnIpKQogICAgICAgIH0sCgogICAgICAgIG9uTmV3TWFuYWdlcigpIHsKICAgICAgICAgICAgdGhpcy51dGlscy5QT1NUKCcvbWFuYWdlci9tYW5hZ2VyJywgdGhpcy5uZXdNYW5hZ2VyRm9ybSkudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgdGhpcy5uZXdNYW5hZ2VyRGlhbG9nVmlzaWJsZSA9IGZhbHNlCiAgICAgICAgICAgICAgICB0aGlzLm5ld01hbmFnZXJGb3JtID0gewogICAgICAgICAgICAgICAgICAgIE5hbWU6ICcnLAogICAgICAgICAgICAgICAgICAgIFBhc3N3b3JkOiAnJywKICAgICAgICAgICAgICAgICAgICBJc0NoZWNrOiBmYWxzZSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcyhyZXMpCiAgICAgICAgICAgICAgICB0aGlzLmdldE1hbmFnZXIoKQogICAgICAgICAgICB9KS5jYXRjaChlcnIgPT4gdGhpcy4kbWVzc2FnZS5lcnJvcihlcnIpKQogICAgICAgIH0sCgogICAgICAgIGVkaXRQYXNzd29yZChpZCkgewogICAgICAgICAgICB0aGlzLiRjb25maXJtKHRoaXMuJGkxOG4udCgnbWFuYWdlci5jaGFuZ2VfcGFzc3dvcmRfY29uZmlybScpLCB0aGlzLiRpMThuLnQoJ21hbmFnZXIuY29uZmlybScpLCB7CiAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogdGhpcy4kaTE4bi50KCdnZW5lcmFsLmFwcGx5JyksCiAgICAgICAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiB0aGlzLiRpMThuLnQoJ2dlbmVyYWwuY2FuY2VsJyksCiAgICAgICAgICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgICAgICAgfSkudGhlbigoKSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLnV0aWxzLkdFVCgnL21hbmFnZXIvbWFuYWdlci9jaGFuZ2VQYXNzd29yZD9pZD0nICsgaWQpLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgICAgICB0aGlzLiRhbGVydChyZXMsIHRoaXMuJGkxOG4udCgnbWFuYWdlci5uZXdfcGFzc3dvcmQnKSwgewogICAgICAgICAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogdGhpcy4kaTE4bi50KCdtYW5hZ2VyLnNhdmVfY29uZmlybScpCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9KS5jYXRjaChlcnIgPT4gdGhpcy4kbWVzc2FnZS5lcnJvcihlcnIpKQogICAgICAgICAgICB9KS5jYXRjaCgoKSA9PiB7CiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKCiAgICAgICAgZGVsZXRlTWFuYWdlcihpZCkgewogICAgICAgICAgICB0aGlzLiRjb25maXJtKHRoaXMuJGkxOG4udCgnbWFuYWdlci5kZWxldGVfYWNjb3VudF9jb25maXJtJyksIHRoaXMuJGkxOG4udCgnbWFuYWdlci5jb25maXJtJyksIHsKICAgICAgICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiB0aGlzLiRpMThuLnQoJ2dlbmVyYWwuYXBwbHknKSwKICAgICAgICAgICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6IHRoaXMuJGkxOG4udCgnZ2VuZXJhbC5jYW5jZWwnKSwKICAgICAgICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICAgICAgICB9KS50aGVuKCgpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMudXRpbHMuREVMRVRFKCcvbWFuYWdlci9tYW5hZ2VyP2lkPScgKyBpZCkudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0TWFuYWdlcigpCiAgICAgICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKHJlcykKICAgICAgICAgICAgICAgIH0pLmNhdGNoKGVyciA9PiB0aGlzLiRtZXNzYWdlLmVycm9yKGVycikpCiAgICAgICAgICAgIH0pLmNhdGNoKCgpID0+IHsKICAgICAgICAgICAgfSkKICAgICAgICB9LAoKICAgICAgICByZWZyZXNoVG9rZW4oaWQpIHsKICAgICAgICAgICAgdGhpcy4kY29uZmlybSh0aGlzLiRpMThuLnQoJ21hbmFnZXIucmVmcmVzaF90b2tlbl9jb25maXJtJyksIHRoaXMuJGkxOG4udCgnbWFuYWdlci5jb25maXJtJyksIHsKICAgICAgICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiB0aGlzLiRpMThuLnQoJ2dlbmVyYWwuYXBwbHknKSwKICAgICAgICAgICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6IHRoaXMuJGkxOG4udCgnZ2VuZXJhbC5jYW5jZWwnKSwKICAgICAgICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICAgICAgICB9KS50aGVuKCgpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMudXRpbHMuR0VUKCcvbWFuYWdlci9tYW5hZ2VyL3Rva2VuP2lkPScgKyBpZCkudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0TWFuYWdlcigpCiAgICAgICAgICAgICAgICAgICAgdGhpcy4kYWxlcnQocmVzLCB0aGlzLiRpMThuLnQoJ21hbmFnZXIubmV3X3Rva2VuJyksIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6IHRoaXMuJGkxOG4udCgnbWFuYWdlci5zYXZlX2NvbmZpcm0nKQogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSkuY2F0Y2goZXJyID0+IHRoaXMuJG1lc3NhZ2UuZXJyb3IoZXJyKSkKICAgICAgICAgICAgfSkuY2F0Y2goKCkgPT4gewogICAgICAgICAgICB9KQogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["Manager.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Manager.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <el-button type=\"primary\" @click=\"newManagerDialogVisible = true\">{{$t('manager.add')}}</el-button>\n        <el-table :data=\"managerList\" style=\"width: 100%\" stripe>\n            <el-table-column width=\"80\" prop=\"ID\" label=\"ID\"/>\n            <el-table-column prop=\"Name\" :label=\"$t('manager.account')\"/>\n            <el-table-column prop=\"IsCheck\" :label=\"$t('manager.is_check')\">\n                <template slot-scope=\"scope\">{{scope.row.IsCheck}}</template>\n            </el-table-column>\n            <el-table-column prop=\"Token\" :label=\"$t('manager.token')\"/>\n            <el-table-column :label=\"$t('general.operate')\" width=\"300\">\n                <template slot-scope=\"scope\">\n                    <el-button size=\"mini\" v-if=\"scope.row.Token !== token\"\n                               @click=\"refreshToken(scope.row.ID)\">{{$t('manager.refresh_token')}}\n                    </el-button>\n                    <el-button size=\"mini\" disabled v-else>{{$t('manager.refresh_token')}}</el-button>\n                    <el-button size=\"mini\" v-if=\"!scope.row.IsCheck\" type=\"warning\" @click=\"editPassword(scope.row.ID)\">\n                        {{$t('manager.change_password')}}\n                    </el-button>\n                    <el-button size=\"mini\" type=\"danger\" @click=\"deleteManager(scope.row.ID)\">\n                        {{$t('manager.delete')}}\n                    </el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n\n        <!-- New account -->\n        <el-dialog :title=\"$t('manager.add')\" :visible.sync=\"newManagerDialogVisible\">\n            <el-form :model=\"newManagerForm\" label-width=\"120px\">\n                <el-form-item>\n                    <el-checkbox v-model=\"newManagerForm.IsCheck\">{{$t('manager.is_check')}}</el-checkbox>\n                </el-form-item>\n                <el-form-item :label=\"$t('manager.account')\">\n                    <el-input v-model=\"newManagerForm.Name\"/>\n                </el-form-item>\n                <el-form-item v-if=\"!newManagerForm.IsCheck\" :label=\"$t('manager.password')\">\n                    <el-input v-model=\"newManagerForm.Password\"/>\n                </el-form-item>\n            </el-form>\n            <el-button type=\"primary\" @click=\"onNewManager\">{{$t('manager.add')}}</el-button>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"Manager\",\n\n        data: () => ({\n            token: localStorage.getItem('managerToken'),\n            newManagerDialogVisible: false,\n            managerList: null,\n\n            newManagerForm: {\n                Name: '',\n                Password: '',\n                IsCheck: false,\n            },\n        }),\n\n        mounted() {\n            this.getManager()\n        },\n\n        methods: {\n            getManager() {\n                this.utils.GET('/manager/managers').then(res => {\n                    this.managerList = res\n                }).catch(err => this.$message.error(err))\n            },\n\n            onNewManager() {\n                this.utils.POST('/manager/manager', this.newManagerForm).then(res => {\n                    this.newManagerDialogVisible = false\n                    this.newManagerForm = {\n                        Name: '',\n                        Password: '',\n                        IsCheck: false,\n                    }\n                    this.$message.success(res)\n                    this.getManager()\n                }).catch(err => this.$message.error(err))\n            },\n\n            editPassword(id) {\n                this.$confirm(this.$i18n.t('manager.change_password_confirm'), this.$i18n.t('manager.confirm'), {\n                    confirmButtonText: this.$i18n.t('general.apply'),\n                    cancelButtonText: this.$i18n.t('general.cancel'),\n                    type: 'warning'\n                }).then(() => {\n                    this.utils.GET('/manager/manager/changePassword?id=' + id).then(res => {\n                        this.$alert(res, this.$i18n.t('manager.new_password'), {\n                            confirmButtonText: this.$i18n.t('manager.save_confirm')\n                        });\n                    }).catch(err => this.$message.error(err))\n                }).catch(() => {\n                })\n            },\n\n            deleteManager(id) {\n                this.$confirm(this.$i18n.t('manager.delete_account_confirm'), this.$i18n.t('manager.confirm'), {\n                    confirmButtonText: this.$i18n.t('general.apply'),\n                    cancelButtonText: this.$i18n.t('general.cancel'),\n                    type: 'warning'\n                }).then(() => {\n                    this.utils.DELETE('/manager/manager?id=' + id).then(res => {\n                        this.getManager()\n                        this.$message.success(res)\n                    }).catch(err => this.$message.error(err))\n                }).catch(() => {\n                })\n            },\n\n            refreshToken(id) {\n                this.$confirm(this.$i18n.t('manager.refresh_token_confirm'), this.$i18n.t('manager.confirm'), {\n                    confirmButtonText: this.$i18n.t('general.apply'),\n                    cancelButtonText: this.$i18n.t('general.cancel'),\n                    type: 'warning'\n                }).then(() => {\n                    this.utils.GET('/manager/manager/token?id=' + id).then(res => {\n                        this.getManager()\n                        this.$alert(res, this.$i18n.t('manager.new_token'), {\n                            confirmButtonText: this.$i18n.t('manager.save_confirm')\n                        });\n                    }).catch(err => this.$message.error(err))\n                }).catch(() => {\n                })\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>"]}]}