{"remainingRequest":"/home/osboxes/fronted_manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/osboxes/fronted_manager/src/views/GameBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/osboxes/fronted_manager/src/views/GameBox.vue","mtime":1706256621149},{"path":"/home/osboxes/fronted_manager/node_modules/cache-loader/dist/cjs.js","mtime":1706256287886},{"path":"/home/osboxes/fronted_manager/node_modules/thread-loader/dist/cjs.js","mtime":1706256287968},{"path":"/home/osboxes/fronted_manager/node_modules/babel-loader/lib/index.js","mtime":1706256287673},{"path":"/home/osboxes/fronted_manager/node_modules/cache-loader/dist/cjs.js","mtime":1706256287886},{"path":"/home/osboxes/fronted_manager/node_modules/vue-loader/lib/index.js","mtime":1706256337311}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}