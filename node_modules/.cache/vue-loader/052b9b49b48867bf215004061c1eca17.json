{"remainingRequest":"/home/kali/fronted_manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kali/fronted_manager/src/views/Config.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kali/fronted_manager/src/views/Config.vue","mtime":1718174862663},{"path":"/home/kali/fronted_manager/node_modules/cache-loader/dist/cjs.js","mtime":1718174862074},{"path":"/home/kali/fronted_manager/node_modules/babel-loader/lib/index.js","mtime":1718174862030},{"path":"/home/kali/fronted_manager/node_modules/cache-loader/dist/cjs.js","mtime":1718174862074},{"path":"/home/kali/fronted_manager/node_modules/vue-loader/lib/index.js","mtime":1718174862613}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQ29uZmlnIiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29uZmlnOiBbXSwKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldEFsbENvbmZpZygpCiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRBbGxDb25maWcoKSB7CiAgICAgIHRoaXMudXRpbHMuR0VUKCcvbWFuYWdlci9jb25maWdzJykudGhlbihyZXMgPT4gewogICAgICAgIHRoaXMuY29uZmlnID0gcmVzCiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmNvbmZpZy5sZW5ndGg7IGkrKykgewogICAgICAgICAgLy8gQ29udmVydCB0aGUgc3RyaW5nIHRvIGJvb2xlYW4KICAgICAgICAgIGlmICh0aGlzLmNvbmZpZ1tpXS5LaW5kID09PSAxKSB7CiAgICAgICAgICAgIHRoaXMuY29uZmlnW2ldLlZhbHVlID0gdGhpcy5jb25maWdbaV0uVmFsdWUgPT09ICd0cnVlJwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZXJyID0+IHRoaXMuJG1lc3NhZ2UuZXJyb3IoZXJyKSkKICAgIH0sCiAgICBzYXZlQ29uZmlnKCkgewogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuY29uZmlnLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgLy8gQ29udmVydCB0aGUgYm9vbGVhbiB0byBzdHJpbmcKICAgICAgICBpZiAodGhpcy5jb25maWdbaV0uS2luZCA9PT0gMSkgewogICAgICAgICAgdGhpcy5jb25maWdbaV0uVmFsdWUgPSB0aGlzLmNvbmZpZ1tpXS5WYWx1ZS50b1N0cmluZygpCiAgICAgICAgfQogICAgICB9CiAgICAgIHRoaXMudXRpbHMuUFVUKCcvbWFuYWdlci9jb25maWcnLCB0aGlzLmNvbmZpZykudGhlbihyZXMgPT4gewogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcyhyZXMpCiAgICAgICAgdGhpcy5nZXRBbGxDb25maWcoKQogICAgICAgIC8vIEhhcmQgY29kZSBoZXJlLCB0aGUgaW5kZXggNSBpcyB0aGUgYGRlZmF1bHRfbGFuZ3VhZ2VgLgogICAgICAgIHRoaXMuJGkxOG4ubG9jYWxlID0gdGhpcy5jb25maWdbNV0uVmFsdWUKICAgICAgfSkuY2F0Y2goZXJyID0+IHRoaXMuJG1lc3NhZ2UuZXJyb3IoZXJyKSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Config.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Config.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"8\" :offset=\"7\">\n        <el-form label-width=\"250px\">\n          <el-form-item v-for=\"(c, index) in config\" v-bind:key=\"index\" :label=\"$t(`config.${c.Key}`)\">\n            <el-input v-if=\"c.Kind === 0\" v-model=\"config[index].Value\"></el-input>\n            <el-switch v-if=\"c.Kind === 1\" v-model=\"config[index].Value\"></el-switch>\n            <el-select v-if=\"c.Kind === 2\" v-model=\"config[index].Value\" placeholder=\"\">\n              <el-option\n                  v-for=\"(item, index) in c.Options.split('|')\"\n                  :key=\"index\"\n                  :label=\"item\"\n                  :value=\"item\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"saveConfig\">{{ $t('config.save') }}</el-button>\n          </el-form-item>\n        </el-form>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Config\",\n  data() {\n    return {\n      config: [],\n    }\n  },\n  mounted() {\n    this.getAllConfig()\n  },\n  methods: {\n    getAllConfig() {\n      this.utils.GET('/manager/configs').then(res => {\n        this.config = res\n        for (let i = 0; i < this.config.length; i++) {\n          // Convert the string to boolean\n          if (this.config[i].Kind === 1) {\n            this.config[i].Value = this.config[i].Value === 'true'\n          }\n        }\n      }).catch(err => this.$message.error(err))\n    },\n    saveConfig() {\n      for (let i = 0; i < this.config.length; i++) {\n        // Convert the boolean to string\n        if (this.config[i].Kind === 1) {\n          this.config[i].Value = this.config[i].Value.toString()\n        }\n      }\n      this.utils.PUT('/manager/config', this.config).then(res => {\n        this.$message.success(res)\n        this.getAllConfig()\n        // Hard code here, the index 5 is the `default_language`.\n        this.$i18n.locale = this.config[5].Value\n      }).catch(err => this.$message.error(err))\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}