{"remainingRequest":"/home/osboxes/Cardinal_manager_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/osboxes/Cardinal_manager_frontend/src/views/GameBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/osboxes/Cardinal_manager_frontend/src/views/GameBox.vue","mtime":1706256621149},{"path":"/home/osboxes/Cardinal_manager_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1706256287886},{"path":"/home/osboxes/Cardinal_manager_frontend/node_modules/babel-loader/lib/index.js","mtime":1706256287673},{"path":"/home/osboxes/Cardinal_manager_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1706256287886},{"path":"/home/osboxes/Cardinal_manager_frontend/node_modules/vue-loader/lib/index.js","mtime":1706256337311}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["GameBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"GameBox.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <el-dropdown style=\"margin-right: 10px;\" @command=\"(command) => {\n            switch(command){\n                case 'remote-gamebox': newGameBoxDialogVisible = true; return;\n                case 'from-docker': dockerImageVisible = true; return;\n            }\n        }\">\n      <el-button type=\"primary\">\n        {{ $t('gamebox.publish') }}<i class=\"el-icon-arrow-down el-icon--right\"></i>\n      </el-button>\n      <el-dropdown-menu slot=\"dropdown\">\n        <el-dropdown-item command=\"remote-gamebox\">{{ $t('gamebox.publish_out') }}</el-dropdown-item>\n        <!--                <el-dropdown-item command=\"from-docker\">从镜像部署靶机</el-dropdown-item>-->\n      </el-dropdown-menu>\n    </el-dropdown>\n    <el-button @click=\"testAllSSH\" :loading=\"sshTesting\">{{ $t('gamebox.test_ssh') }}</el-button>\n    <el-button @click=\"refreshFlag\">{{ $t('gamebox.refresh_flag') }}</el-button>\n    <el-popconfirm\n        :confirm-button-text=\"$t('general.apply')\"\n        :cancel-button-text=\"$t('general.cancel')\"\n        icon=\"el-icon-info\"\n        icon-color=\"red\"\n        :title=\"$t('gamebox.reset_confirm')\"\n        @onConfirm=\"resetGameBox\"\n    >\n      <el-button slot=\"reference\" type=\"danger\" style=\"margin-left: 10px;\">{{ $t('gamebox.reset') }}</el-button>\n    </el-popconfirm>\n\n    <!-- Gamebox list -->\n    <el-table :data=\"gameBoxList\" style=\"width: 100%\" stripe v-loading=\"gameBoxList === null\">\n      <el-table-column width=\"80\" prop=\"ID\" label=\"ID\"/>\n      <el-table-column prop=\"ChallengeTitle\" :label=\"$t('gamebox.challenge')\"/>\n      <el-table-column prop=\"TeamName\" :label=\"$t('gamebox.team')\"/>\n      <el-table-column prop=\"IP\" :label=\"$t('gamebox.ip')\"/>\n      <el-table-column prop=\"Port\" :label=\"$t('gamebox.port')\"/>\n      <el-table-column prop=\"Score\" :label=\"$t('gamebox.score')\"\n                       :formatter=\"(row) => utils.FormatFloat(row.Score)\"/>\n      <el-table-column prop=\"Description\" :label=\"$t('gamebox.description')\"/>\n      <el-table-column prop=\"IsDown\" :label=\"$t('gamebox.down')\">\n        <template slot-scope=\"scope\">{{ scope.row.IsDown }}</template>\n      </el-table-column>\n      <el-table-column prop=\"IsAttacked\" :label=\"$t('gamebox.attacked')\">\n        <template slot-scope=\"scope\">{{ scope.row.IsAttacked }}</template>\n      </el-table-column>\n      <el-table-column :label=\"$t('general.create_at')\" width=\"200\"\n                       :formatter=\"(row)=>utils.FormatGoTime(row.CreatedAt)\"/>\n      <el-table-column :label=\"$t('general.operate')\" width=\"300\">\n        <template slot-scope=\"scope\">\n          <el-button\n              size=\"mini\"\n              @click=\"()=>{editGameBoxForm = JSON.parse(JSON.stringify(scope.row)); editGameBoxDialogVisible = true}\">\n            {{ $t('general.edit') }}\n          </el-button>\n          <el-popconfirm\n              :confirmButtonText=\"$t('general.confirm_cancel')\"\n              :cancelButtonText=\"$t('general.cancel')\"\n              icon=\"el-icon-info\"\n              iconColor=\"red\"\n              :title=\"$t('gamebox.delete_title')\"\n              @onConfirm=\"handleDelete(scope.row)\"\n          >\n            <el-button size=\"mini\" type=\"danger\" slot=\"reference\">{{ $t('general.delete') }}\n            </el-button>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <br>\n    <el-pagination style=\"text-align:center\" background layout=\"prev, pager, next\" :total=\"total\" :page-size=\"per\"\n                   @current-change=\"(p)=>{page = p; getGameBoxes()}\"></el-pagination>\n\n    <!-- New GameBox from remote -->\n    <el-dialog :title=\"$t('gamebox.publish')\" :visible.sync=\"newGameBoxDialogVisible\">\n      <el-button type=\"primary\" @click=\"mutliGameBoxDialogVisible = true\">{{ $t('gamebox.multi') }}</el-button>\n      <el-button @click=\"newGameBoxForm.push({\n                    ChallengeID: null,\n                    TeamID: null,\n                    IP: '',\n                    Port: '',\n                    SSHPort: '',\n                    SSHUser:'root',\n                    SSHPassword: '',\n                    Description: ''\n                })\">{{ $t('gamebox.add') }}\n      </el-button>\n      <el-divider/>\n      <div v-for=\"(item, index) in newGameBoxForm\" v-bind:key=\"index\">\n        <el-row :gutter=\"20\">\n          <el-form :model=\"item\" label-width=\"130px\">\n            <el-button type=\"danger\" icon=\"el-icon-delete\" circle @click=\"newGameBoxForm.splice(index, 1)\"/>\n            <el-col :span=\"10\">\n              <el-form-item :label=\"$t('gamebox.challenge')\">\n                <el-select v-model=\"item.ChallengeID\"\n                           :placeholder=\"$t('gamebox.challenge_placeholder')\">\n                  <el-option\n                      v-for=\"challenge in challenges\"\n                      :key=\"challenge.ID\"\n                      :label=\"challenge.Title\"\n                      :value=\"challenge.ID\">\n                  </el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-form-item :label=\"$t('gamebox.team')\">\n                <el-select v-model=\"item.TeamID\" :placeholder=\"$t('gamebox.team_placeholder')\">\n                  <el-option\n                      v-for=\"team in teams\"\n                      :key=\"team.ID\"\n                      :label=\"team.Name\"\n                      :value=\"team.ID\">\n                  </el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-form-item :label=\"$t('gamebox.ip')\">\n                <el-input v-model=\"item.IP\" :placeholder=\"$t('gamebox.ip_placeholder')\"></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-form-item :label=\"$t('gamebox.port')\">\n                <el-input v-model=\"item.Port\" :placeholder=\"$t('gamebox.port_placeholder')\"></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-form-item :label=\"$t('gamebox.description')\">\n                <el-input type=\"textarea\" :rows=\"3\" :placeholder=\"$t('gamebox.description_placeholder')\"\n                          v-model=\"item.Description\">\n                </el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"7\">\n              <el-form-item :label=\"$t('gamebox.ssh_port')\">\n                <el-input v-model=\"item.SSHPort\"></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"7\">\n              <el-form-item :label=\"$t('gamebox.ssh_user')\">\n                <el-input v-model=\"item.SSHUser\"></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"9\">\n              <el-form-item :label=\"$t('gamebox.ssh_password')\">\n                <el-input v-model=\"item.SSHPassword\"></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col>\n              <el-divider></el-divider>\n            </el-col>\n          </el-form>\n        </el-row>\n\n      </div>\n      <el-button type=\"primary\" @click=\"onNewGameBox\">{{ $t('gamebox.publish') }}</el-button>\n    </el-dialog>\n\n    <!-- Multi -->\n    <el-dialog :title=\"$t('gamebox.multi')\" :visible.sync=\"mutliGameBoxDialogVisible\">\n            <span>\n                {{ $t('gamebox.format') }}\n                <code>[{\n                    \"ChallengeID\": 1,\n                    \"TeamID\": 1,\n                    \"IP\": \"\",\n                    \"Port\": \"\",\n                    \"SSHPort\": \"\",\n                    \"SSHUser\": \"\",\n                    \"SSHPassword\": \"\",\n                    \"Description\": \"\"\n                }]</code>\n            </span>\n      <el-form>\n        <el-form-item :label=\"$t('gamebox.json_string')\">\n          <el-input type=\"textarea\" v-model=\"mutliGameBoxJSON\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"mutliGameBoxDialogVisible = false\">{{ $t('general.cancel') }}</el-button>\n        <el-button type=\"primary\" @click=\"mutliGameBox\">{{ $t('general.apply') }}</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- Edit -->\n    <el-dialog :title=\"$t('gamebox.edit')\" :visible.sync=\"editGameBoxDialogVisible\">\n      <el-form label-width=\"120px\">\n        <el-form-item :label=\"$t('gamebox.challenge')\">\n          {{ editGameBoxForm.ChallengeTitle }}\n        </el-form-item>\n        <el-form-item :label=\"$t('gamebox.team')\">\n          {{ editGameBoxForm.TeamName }}\n        </el-form-item>\n        <el-form-item :label=\"$t('gamebox.ip')\">\n          <el-input v-model=\"editGameBoxForm.IP\"\n                    :placeholder=\"$t('gamebox.ip_placeholder')\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('gamebox.port')\">\n          <el-input v-model=\"editGameBoxForm.Port\"\n                    :placeholder=\"$t('gamebox.port_placeholder')\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('gamebox.description')\">\n          <el-input type=\"textarea\" :rows=\"3\" :placeholder=\"$t('gamebox.description_placeholder')\"\n                    v-model=\"editGameBoxForm.Description\">\n          </el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('gamebox.ssh_port')\">\n          <el-input v-model=\"editGameBoxForm.SSHPort\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('gamebox.ssh_user')\">\n          <el-input v-model=\"editGameBoxForm.SSHUser\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('gamebox.ssh_password')\">\n          <el-input v-model=\"editGameBoxForm.SSHPassword\"></el-input>\n        </el-form-item>\n      </el-form>\n      <el-button type=\"primary\" @click=\"onEditGameBox\">{{ $t('gamebox.edit') }}</el-button>\n      <el-button\n          @click=\"testGameBoxSSH(editGameBoxForm.IP, editGameBoxForm.SSHPort, editGameBoxForm.SSHUser, editGameBoxForm.SSHPassword)\">\n        {{ $t('gamebox.test_ssh') }}\n      </el-button>\n    </el-dialog>\n\n    <!-- SSH -->\n    <el-dialog :title=\"$t('gamebox.test_ssh_fail')\" :visible.sync=\"sshFailDialogVisible\">\n      <div v-html=\"sshFailContent\"></div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"sshFailDialogVisible = false\">{{ $t('general.apply') }}</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- New GameBox from docker -->\n    <el-dialog title=\"从镜像部署题目\" :visible.sync=\"dockerImageVisible\" width=\"70%\">\n      <el-form v-loading=\"loadingDockerfile\">\n        <el-input placeholder=\"your_name/web_challenge:latest\" v-model=\"dockerImageText\">\n          <template slot=\"prepend\">docker pull</template>\n          <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getImageData\">获取镜像信息</el-button>\n        </el-input>\n      </el-form>\n      <br>\n      <div v-if=\"dockerInfo != null\">\n        <el-row :gutter=\"24\">\n          <el-col :span=\"12\">\n            <el-form :inline=\"true\" label-width=\"120px\">\n              <!-- Challenge -->\n              <el-form-item :label=\"$t('gamebox.challenge_placeholder')\">\n                <el-select v-model=\"dockerForm.Challenge\"\n                           :placeholder=\"$t('gamebox.challenge_placeholder')\">\n                  <el-option\n                      v-for=\"challenge in challenges\"\n                      :key=\"challenge.ID\"\n                      :label=\"challenge.Title\"\n                      :value=\"challenge.ID\">\n                  </el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item label=\"题目 IP\">\n                <el-input placeholder=\"题目 IP\" v-model=\"dockerForm.IP\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"容器端口\">\n                <el-input placeholder=\"容器端口\" v-model=\"dockerForm.ServicePort\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"容器 SSH 端口\">\n                <el-input placeholder=\"容器 SSH 端口\" v-model=\"dockerForm.SSHPort\"></el-input>\n              </el-form-item>\n              <br>\n              <div style=\"text-align: center; color:rgba(128,128,128,0.50);\">SSH 密码将自动生成</div>\n            </el-form>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form :inline=\"true\" label-width=\"120px\">\n              <el-form-item label=\"root SSH 用户名\">\n                <el-input placeholder=\"root SSH 用户名\" v-model=\"dockerForm.RootSSHName\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"选手 SSH 用户名\">\n                <el-input placeholder=\"选手 SSH 用户名\" v-model=\"dockerForm.UserSSHName\"></el-input>\n              </el-form-item>\n            </el-form>\n            题目描述\n            <el-input\n                :rows=\"5\"\n                type=\"textarea\"\n                placeholder=\"请输入内容\"\n                v-model=\"dockerForm.Description\">\n            </el-input>\n          </el-col>\n        </el-row>\n\n        <el-divider content-position=\"left\">端口映射</el-divider>\n        <!-- Ports -->\n        <el-form :inline=\"true\" label-width=\"30px\">\n          <el-form-item v-for=\"(port, index) in dockerForm.Ports\" v-bind:key=\"index\"\n                        style=\"margin-bottom: 0px;\">\n            <el-input style=\"width: 180px;\" placeholder=\"映射端口\" v-model=\"port.Out\" size=\"mini\" :min=\"1\"\n                      :max=\"65535\">\n              <template slot=\"append\"> -> {{ port.In }}\n                <el-button icon=\"el-icon-error\" @click=\"dockerForm.Ports.splice(index, 1)\"></el-button>\n              </template>\n            </el-input>\n          </el-form-item>\n        </el-form>\n        <el-form :inline=\"true\" label-width=\"30px\">\n          <el-form-item>\n            <!-- New port input -->\n            <el-input\n                v-if=\"inputPortVisible\"\n                v-model=\"inputPortValue\"\n                ref=\"portInput\"\n                size=\"mini\"\n                @keyup.enter.native=\"inputPortConfirm\"\n                @blur=\"inputPortConfirm\"\n                minlength=\"1\"\n                maxlength=\"5\"\n                label=\"容器内端口\"\n            >\n            </el-input>\n            <el-button v-else size=\"mini\" @click=\"()=>{\n                            inputPortVisible = true;\n                            this.$nextTick(_ => {\n                              this.$refs.portInput.$refs.input.focus();\n                            });\n                        }\">+ 添加端口\n            </el-button>\n          </el-form-item>\n        </el-form>\n\n        <!-- container info -->\n        <el-table\n            size=\"mini\"\n            :data=\"teams\"\n            stripe\n            max-height=\"300\"\n            style=\"width: 100%\">\n          <el-table-column\n              prop=\"Name\"\n              label=\"队伍名\"\n              width=\"180\">\n          </el-table-column>\n          <el-table-column label=\"端口配置\">\n            <template slot-scope=\"scope\">\n              <el-tag\n                  size=\"mini\"\n                  v-for=\"(port, index) in dockerForm.Ports\"\n                  :key=\"index\"\n                  effect=\"plain\"\n                  style=\"margin-right: 10px;\"\n              >\n                {{ Number(port.Out) + scope.$index }} -> {{ port.In }}\n              </el-tag>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"容器名\">\n            <template slot-scope=\"scope\">\n              {{ dockerInfo.Name }}_{{ scope.row.Name }}\n            </template>\n          </el-table-column>\n        </el-table>\n\n      </div>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dockerImageVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"deployFromDocker\">添加</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"GameBox\",\n  data: () => ({\n    newGameBoxDialogVisible: false,\n    editGameBoxDialogVisible: false,\n    mutliGameBoxDialogVisible: false,\n    sshFailDialogVisible: false,\n    sshTesting: false,\n\n    gameBoxList: null,\n    teams: [],\n    challenges: [],\n\n    newGameBoxForm: [],\n    editGameBoxForm: {\n      ChallengeTitle: '',\n      TeamName: '',\n      IP: '',\n      Port: '',\n      SSHPort: '',\n      SSHUser: '',\n      SSHPassword: '',\n      Description: ''\n    },\n\n    // Docker\n    loadingDockerfile: false,\n    dockerImageVisible: false,\n    inputPortVisible: false,\n    inputPortValue: '',\n    dockerImageText: 'wuhan005/awd_web:latest',\n    dockerImageForm: {      // search form\n      User: '',\n      Image: '',\n      Tag: ''\n    },\n    dockerInfo: null,      // dockerfile info\n    dockerForm: {\n      Image: '',\n      Challenge: null,\n      IP: '',\n      ServicePort: '',\n      SSHPort: '',\n      RootSSHName: '',\n      UserSSHName: '',\n      Description: `SSH 端口：{{ssh_port}}\nSSH 账号：{{ssh_name}}\nSSH 密码：{{ssh_password}}`,\n      Ports: []\n    },\n\n    mutliGameBoxJSON: '',\n    sshFailContent: '',\n\n    page: 1,\n    per: 10,\n\n    total: 0,\n  }),\n  async mounted() {\n    await this.getTeams()\n    await this.getChallenges()\n    await this.getGameBoxes()\n  },\n  methods: {\n    getGameBoxes() {\n      return new Promise((resolve) => {\n        this.utils.GET(`/manager/gameboxes?page=${this.page}&per=${this.per}`).then(res => {\n          let gameBox = res.Data\n          gameBox.forEach((value, index) => {\n            gameBox[index]['ChallengeTitle'] = this.getChallengeByID(value.ChallengeID)['Title']\n            gameBox[index]['TeamName'] = this.getTeamByID(value.TeamID)['Name']\n          })\n          this.gameBoxList = gameBox\n          this.total = res.Total\n          resolve()\n        }).catch(err => {\n          this.$message.error(err);\n          resolve()\n        })\n      })\n    },\n\n    getTeams() {\n      return new Promise((resolve) => {\n        this.utils.GET(\"/manager/teams\").then(res => {\n          this.teams = res\n          resolve()\n        }).catch(err => {\n          this.$message.error(err);\n          resolve()\n        })\n      })\n    },\n\n    async getChallenges() {\n      return new Promise((resolve) => {\n        this.utils.GET(\"/manager/challenges\").then(res => {\n          this.challenges = res\n          resolve()\n        }).catch(err => {\n          this.$message.error(err);\n          resolve()\n        })\n      })\n    },\n\n    mutliGameBox() {\n      let backup = JSON.parse(JSON.stringify(this.newGameBoxForm))\n      try {\n        let gameBoxes = JSON.parse(this.mutliGameBoxJSON)\n        gameBoxes.forEach((value) => {\n          this.newGameBoxForm.push({\n            ChallengeID: value.ChallengeID,\n            TeamID: value.TeamID,\n            IP: value.IP,\n            Port: value.Port,\n            SSHPort: value.SSHPort !== undefined ? value.SSHPort : '',\n            SSHUser: value.SSHUser !== undefined ? value.SSHUser : '',\n            SSHPassword: value.SSHPassword !== undefined ? value.SSHPassword : '',\n            Description: value.Description\n          })\n        })\n        this.mutliGameBoxDialogVisible = false\n        this.mutliGameBoxJSON = ''\n      } catch (e) {\n        this.$message.error(this.$i18n.t('gamebox.json_parse_error'))\n        this.newGameBoxForm = backup\n      }\n    },\n\n    onNewGameBox() {\n      this.utils.POST('/manager/gameboxes', this.newGameBoxForm).then(res => {\n        this.newGameBoxDialogVisible = false\n        this.getGameBoxes()\n        // Clean form\n        this.newGameBoxForm = []\n        this.$message({message: res, type: 'success'})\n      }).catch(err => this.$message.error(err))\n    },\n\n    onEditGameBox() {\n      this.utils.PUT('/manager/gamebox', this.editGameBoxForm).then(res => {\n        this.editGameBoxDialogVisible = false\n        this.getGameBoxes()\n        this.$message.success(res)\n      }).catch(err => this.$message.error(err))\n    },\n\n    handleDelete(row) {\n      this.utils.DELETE(\"/manager/gamebox?id=\" + row.ID).then(res => {\n        this.$message({\n          message: res,\n          type: 'success'\n        });\n        this.getGameBoxes()\n      }).catch(err => this.$message({message: err, type: 'error'}))\n    },\n\n    getChallengeByID(id) {\n      let result = null;\n      this.challenges.forEach((value) => {\n        if (value.ID === id) {\n          result = value\n        }\n      })\n      return result\n    },\n\n    getTeamByID(id) {\n      let result = null;\n      this.teams.forEach((value) => {\n        if (value.ID === id) {\n          result = value\n        }\n      })\n      return result\n    },\n\n    getImageData() {\n      this.loadingDockerfile = true\n      this.dockerImageForm.User = this.dockerImageText.split('/')[0]\n      this.dockerImageForm.Image = this.dockerImageText.split('/')[1].split(':')[0]\n      this.dockerImageForm.Tag = this.dockerImageText.split(':')[1]\n\n      this.utils.POST('/manager/docker/findImage', this.dockerImageForm).then(res => {\n        this.loadingDockerfile = false\n        // Set port\n        for (let i = 0; i < res.Ports.length; i++) {\n          this.dockerForm.Ports.push({In: res.Ports[i], Out: 10000 + i * 1000})\n        }\n        this.dockerForm.Image = res.Image\n        this.dockerInfo = res\n      }).catch(err => {\n        this.$message({message: err, type: 'error'});\n        this.loadingDockerfile = false\n      })\n    },\n\n    // Add new port\n    inputPortConfirm() {\n      let inputValue = this.inputPortValue;\n      if (inputValue) {\n        this.dockerForm.Ports.push({In: inputValue, Out: 0});\n      }\n      this.inputPortVisible = false;\n      this.inputPortValue = '';\n    },\n\n    deployFromDocker() {\n      this.utils.POST('/manager/docker/deploy', this.dockerForm).then(res => {\n        console.log(res)\n      }).catch(err => this.$message({message: err, type: 'error'}))\n    },\n\n    testAllSSH() {\n      this.sshTesting = true\n      this.utils.GET(\"/manager/gameboxes/sshTest\").then(res => {\n        this.sshTesting = false\n        if (res === null) {\n          return this.$message.success(this.$i18n.t(\"gamebox.test_ssh_success\"))\n        }\n\n        this.sshFailContent = ''\n        res.forEach(item => {\n          this.sshFailContent += `<strong>TeamID：</strong>${item.TeamID}<br><strong>ChallengeID：</strong>${item.ChallengeID}<br><strong>GameBoxID：</strong>${item.GameBoxID}<br><strong>Error：</strong>${item.Error}<hr>`\n        })\n        this.sshFailDialogVisible = true\n      })\n    },\n\n    testGameBoxSSH(IP, Port, User, Password) {\n      this.$prompt(this.$t('gamebox.input_shell_command'), '', {\n        confirmButtonText: this.$t('general.apply'),\n        cancelButtonText: this.$t('general.cancel'),\n      }).then(({value: Command}) => {\n        this.utils.POST('/manager/gameboxes/sshTest', {\n          IP, Port, User, Password, Command\n        }).then(res => this.$alert(res, this.$t('general.success'))\n        ).catch(err => this.$alert(err, this.$t('general.fail'))\n        )\n      }).catch(() => {\n      });\n    },\n\n    refreshFlag() {\n      this.utils.GET('/manager/gameboxes/refreshFlag')\n          .then(res => this.$message.success(res))\n          .catch(err => this.$message.error(err))\n    },\n\n    resetGameBox() {\n      this.utils.GET('/manager/gameboxes/reset')\n          .then(res => this.$message.success(res))\n          .catch(err => this.$message.error(err))\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}