{"remainingRequest":"/home/kali/fronted_manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kali/fronted_manager/src/views/Bulletin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kali/fronted_manager/src/views/Bulletin.vue","mtime":1718174862663},{"path":"/home/kali/fronted_manager/node_modules/cache-loader/dist/cjs.js","mtime":1718174862074},{"path":"/home/kali/fronted_manager/node_modules/babel-loader/lib/index.js","mtime":1718174862030},{"path":"/home/kali/fronted_manager/node_modules/cache-loader/dist/cjs.js","mtime":1718174862074},{"path":"/home/kali/fronted_manager/node_modules/vue-loader/lib/index.js","mtime":1718174862613}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJCdWxsZXRpbiIsCiAgICBkYXRhOiAoKSA9PiAoewogICAgICAgIG5ld0J1bGxldGluRGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgICAgZWRpdEJ1bGxldGluRGlhbG9nVmlzaWJsZTogZmFsc2UsCgogICAgICAgIGJ1bGxldGluTGlzdDogbnVsbCwKICAgICAgICBlZGl0QnVsbGV0aW5Gb3JtOiB7CiAgICAgICAgICAgIFRpdGxlOiAnJywKICAgICAgICAgICAgQ29udGVudDogJycKICAgICAgICB9LAogICAgICAgIG5ld0J1bGxldGluRm9ybTogewogICAgICAgICAgICBUaXRsZTogJycsCiAgICAgICAgICAgIENvbnRlbnQ6ICcnCiAgICAgICAgfSwKICAgIH0pLAogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLmdldEJ1bGxldGluKCkKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgZ2V0QnVsbGV0aW4oKSB7CiAgICAgICAgICAgIHRoaXMudXRpbHMuR0VUKCcvbWFuYWdlci9idWxsZXRpbnMnKS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLmJ1bGxldGluTGlzdCA9IHJlcwogICAgICAgICAgICB9KS5jYXRjaChlcnIgPT4gdGhpcy4kbWVzc2FnZSh7bWVzc2FnZTogZXJyLCB0eXBlOiAnZXJyb3InfSkpCiAgICAgICAgfSwKCiAgICAgICAgb25OZXdCdWxsZXRpbigpIHsKICAgICAgICAgICAgdGhpcy51dGlscy5QT1NUKCcvbWFuYWdlci9idWxsZXRpbicsIHRoaXMubmV3QnVsbGV0aW5Gb3JtKS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLm5ld0J1bGxldGluRGlhbG9nVmlzaWJsZSA9IGZhbHNlCiAgICAgICAgICAgICAgICAvLyBDbGVhbiBmb3JtLgogICAgICAgICAgICAgICAgdGhpcy5uZXdCdWxsZXRpbkZvcm0gPSB7CiAgICAgICAgICAgICAgICAgICAgVGl0bGU6ICcnLAogICAgICAgICAgICAgICAgICAgIENvbnRlbnQ6ICcnCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlKHttZXNzYWdlOiByZXMsIHR5cGU6ICdzdWNjZXNzJ30pCiAgICAgICAgICAgICAgICB0aGlzLmdldEJ1bGxldGluKCkKICAgICAgICAgICAgfSkuY2F0Y2goZXJyID0+IHRoaXMuJG1lc3NhZ2Uoe21lc3NhZ2U6IGVyciwgdHlwZTogJ2Vycm9yJ30pKQogICAgICAgIH0sCgogICAgICAgIGhhbmRsZUVkaXQoKSB7CiAgICAgICAgICAgIHRoaXMudXRpbHMuUFVUKCcvbWFuYWdlci9idWxsZXRpbicsIHRoaXMuZWRpdEJ1bGxldGluRm9ybSkudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgdGhpcy5lZGl0QnVsbGV0aW5EaWFsb2dWaXNpYmxlID0gZmFsc2UKICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uoe21lc3NhZ2U6IHJlcywgdHlwZTogJ3N1Y2Nlc3MnfSkKICAgICAgICAgICAgICAgIHRoaXMuZ2V0QnVsbGV0aW4oKQogICAgICAgICAgICB9KS5jYXRjaChlcnIgPT4gdGhpcy4kbWVzc2FnZSh7bWVzc2FnZTogZXJyLCB0eXBlOiAnZXJyb3InfSkpCiAgICAgICAgfSwKCiAgICAgICAgaGFuZGxlRGVsZXRlKGlkKSB7CiAgICAgICAgICAgIHRoaXMudXRpbHMuREVMRVRFKCcvbWFuYWdlci9idWxsZXRpbj9pZD0nICsgaWQpLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uoe21lc3NhZ2U6IHJlcywgdHlwZTogJ3N1Y2Nlc3MnfSkKICAgICAgICAgICAgICAgIHRoaXMuZ2V0QnVsbGV0aW4oKQogICAgICAgICAgICB9KS5jYXRjaChlcnIgPT4gdGhpcy4kbWVzc2FnZSh7bWVzc2FnZTogZXJyLCB0eXBlOiAnZXJyb3InfSkpCiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["Bulletin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Bulletin.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <el-button type=\"primary\" @click=\"newBulletinDialogVisible = true\">{{$t('bulletin.publish')}}</el-button>\n        <el-table :data=\"bulletinList\" style=\"width: 100%\" stripe v-loading=\"bulletinList === null\">\n            <el-table-column width=\"80\" prop=\"ID\" label=\"ID\"/>\n            <el-table-column prop=\"Title\" :label=\"$t('bulletin.title')\"/>\n            <el-table-column prop=\"Content\" :label=\"$t('bulletin.content')\"/>\n            <el-table-column :label=\"$t('general.create_at')\" width=\"200\"\n                             :formatter=\"(row)=>utils.FormatGoTime(row.CreatedAt)\"/>\n            <el-table-column :label=\"$t('general.operate')\" width=\"300\">\n                <template slot-scope=\"scope\">\n                    <el-button\n                            size=\"mini\"\n                            @click=\"()=>{editBulletinForm = JSON.parse(JSON.stringify(scope.row)); editBulletinDialogVisible = true}\">\n                        {{$t('general.edit')}}\n                    </el-button>\n\n                    <el-popconfirm\n                            :confirmButtonText=\"$t('general.confirm_cancel')\"\n                            :cancelButtonText=\"$t('general.cancel')\"\n                            icon=\"el-icon-info\"\n                            iconColor=\"red\"\n                            :title=\"$t('bulletin.delete_title')\"\n                            @onConfirm=\"handleDelete(scope.row.ID)\"\n                    >\n                        <el-button size=\"mini\" type=\"danger\" slot=\"reference\">{{$t('general.delete')}}</el-button>\n                    </el-popconfirm>\n                </template>\n            </el-table-column>\n        </el-table>\n\n        <!-- Publish bulletin -->\n        <el-dialog :title=\"$t('bulletin.publish')\" :visible.sync=\"newBulletinDialogVisible\">\n            <el-form :model=\"newBulletinForm\" label-width=\"80px\">\n                <el-form-item :label=\"$t('bulletin.title')\">\n                    <el-input v-model=\"newBulletinForm.Title\"/>\n                </el-form-item>\n                <el-form-item :label=\"$t('bulletin.content')\">\n                    <el-input type=\"textarea\" :rows=\"3\" :placeholder=\"$t('bulletin.content_placeholder')\"\n                              v-model=\"newBulletinForm.Content\"></el-input>\n                </el-form-item>\n            </el-form>\n            <el-button type=\"primary\" @click=\"onNewBulletin\">{{$t('bulletin.publish')}}</el-button>\n        </el-dialog>\n\n        <!-- Edit bulletin -->\n        <el-dialog :title=\"$t('bulletin.edit')\" :visible.sync=\"editBulletinDialogVisible\">\n            <el-form :model=\"editBulletinForm\" label-width=\"80px\">\n                <el-form-item :label=\"$t('bulletin.title')\">\n                    <el-input v-model=\"editBulletinForm.Title\"/>\n                </el-form-item>\n                <el-form-item :label=\"$t('bulletin.content')\">\n                    <el-input type=\"textarea\" :rows=\"3\" :placeholder=\"$t('bulletin.content_placeholder')\"\n                              v-model=\"editBulletinForm.Content\"></el-input>\n                </el-form-item>\n            </el-form>\n            <el-button type=\"primary\" @click=\"handleEdit\">{{$t('bulletin.edit')}}</el-button>\n        </el-dialog>\n\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"Bulletin\",\n        data: () => ({\n            newBulletinDialogVisible: false,\n            editBulletinDialogVisible: false,\n\n            bulletinList: null,\n            editBulletinForm: {\n                Title: '',\n                Content: ''\n            },\n            newBulletinForm: {\n                Title: '',\n                Content: ''\n            },\n        }),\n        mounted() {\n            this.getBulletin()\n        },\n        methods: {\n            getBulletin() {\n                this.utils.GET('/manager/bulletins').then(res => {\n                    this.bulletinList = res\n                }).catch(err => this.$message({message: err, type: 'error'}))\n            },\n\n            onNewBulletin() {\n                this.utils.POST('/manager/bulletin', this.newBulletinForm).then(res => {\n                    this.newBulletinDialogVisible = false\n                    // Clean form.\n                    this.newBulletinForm = {\n                        Title: '',\n                        Content: ''\n                    }\n                    this.$message({message: res, type: 'success'})\n                    this.getBulletin()\n                }).catch(err => this.$message({message: err, type: 'error'}))\n            },\n\n            handleEdit() {\n                this.utils.PUT('/manager/bulletin', this.editBulletinForm).then(res => {\n                    this.editBulletinDialogVisible = false\n                    this.$message({message: res, type: 'success'})\n                    this.getBulletin()\n                }).catch(err => this.$message({message: err, type: 'error'}))\n            },\n\n            handleDelete(id) {\n                this.utils.DELETE('/manager/bulletin?id=' + id).then(res => {\n                    this.$message({message: res, type: 'success'})\n                    this.getBulletin()\n                }).catch(err => this.$message({message: err, type: 'error'}))\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>"]}]}