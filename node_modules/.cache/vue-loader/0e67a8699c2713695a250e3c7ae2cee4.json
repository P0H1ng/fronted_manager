{"remainingRequest":"/home/kali/fronted_manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kali/fronted_manager/src/views/Team.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kali/fronted_manager/src/views/Team.vue","mtime":1718174862663},{"path":"/home/kali/fronted_manager/node_modules/cache-loader/dist/cjs.js","mtime":1718174862074},{"path":"/home/kali/fronted_manager/node_modules/babel-loader/lib/index.js","mtime":1718174862030},{"path":"/home/kali/fronted_manager/node_modules/cache-loader/dist/cjs.js","mtime":1718174862074},{"path":"/home/kali/fronted_manager/node_modules/vue-loader/lib/index.js","mtime":1718174862613}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJUZWFtIiwKICAgIGRhdGE6ICgpID0+ICh7CiAgICAgICAgdGVhbUxpc3Q6IG51bGwsCiAgICAgICAgbmV3VGVhbURpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICAgIGVkaXRUZWFtRGlhbG9nVmlzaWJsZTogZmFsc2UsCgogICAgICAgIHRva2VuOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbWFuYWdlclRva2VuJyksCgogICAgICAgIG5ld1RlYW1Gb3JtOiBbewogICAgICAgICAgICBOYW1lOiAnJywKICAgICAgICAgICAgTG9nbzogJycsCiAgICAgICAgfV0sCgogICAgICAgIGVkaXRUZWFtRm9ybTogewogICAgICAgICAgICBOYW1lOiAnJywKICAgICAgICAgICAgTG9nbzogJycsCiAgICAgICAgfQogICAgfSksCgogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLmdldFRlYW1zKCkKICAgIH0sCgogICAgbWV0aG9kczogewogICAgICAgIGdldFRlYW1zKCkgewogICAgICAgICAgICB0aGlzLnV0aWxzLkdFVCgiL21hbmFnZXIvdGVhbXMiKS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLnRlYW1MaXN0ID0gcmVzCiAgICAgICAgICAgIH0pLmNhdGNoKGVyciA9PiB0aGlzLiRtZXNzYWdlLmVycm9yKGVycikpCiAgICAgICAgfSwKCiAgICAgICAgb25OZXdUZWFtcygpIHsKICAgICAgICAgICAgdGhpcy51dGlscy5QT1NUKCcvbWFuYWdlci90ZWFtcycsIHRoaXMubmV3VGVhbUZvcm0pLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgIHRoaXMubmV3VGVhbURpYWxvZ1Zpc2libGUgPSBmYWxzZQogICAgICAgICAgICAgICAgdGhpcy5nZXRUZWFtcygpCiAgICAgICAgICAgICAgICAvLyBDbGVhbiBmb3JtCiAgICAgICAgICAgICAgICB0aGlzLm5ld1RlYW1Gb3JtID0gW3sKICAgICAgICAgICAgICAgICAgICBOYW1lOiAnJywKICAgICAgICAgICAgICAgICAgICBMb2dvOiAnJywKICAgICAgICAgICAgICAgIH1dCgogICAgICAgICAgICAgICAgY29uc3QgaCA9IHRoaXMuJGNyZWF0ZUVsZW1lbnQ7CiAgICAgICAgICAgICAgICB2YXIgcGFzc3dvcmQgPSBbaCgncCcsIG51bGwsIHRoaXMuJGkxOG4udCgndGVhbS5zYXZlX3Bhc3N3b3JkJykpXQogICAgICAgICAgICAgICAgcmVzLmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgICAgICAgICAgICAgcGFzc3dvcmQucHVzaChoKCdwJywgbnVsbCwgdGhpcy4kaTE4bi50KCd0ZWFtLmFjY291bnRfZGV0YWlsJywgewogICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiBpdGVtLk5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgIFBhc3N3b3JkOiBpdGVtLlBhc3N3b3JkCiAgICAgICAgICAgICAgICAgICAgfSkpKQogICAgICAgICAgICAgICAgfSkKCiAgICAgICAgICAgICAgICB0aGlzLiRhbGVydChoKCdwJywgbnVsbCwgcGFzc3dvcmQpLCB0aGlzLiRpMThuLnQoJ3RlYW0udGVhbV9wYXNzd29yZCcpLCB7CiAgICAgICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6IHRoaXMuJGkxOG4udCgndGVhbS5zYXZlX2NvbmZpcm0nKQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0pLmNhdGNoKGVyciA9PiB0aGlzLiRtZXNzYWdlKHttZXNzYWdlOiBlcnIsIHR5cGU6ICdlcnJvcid9KSkKICAgICAgICB9LAoKICAgICAgICBvbkVkaXRUZWFtKCkgewogICAgICAgICAgICB0aGlzLnV0aWxzLlBVVCgnL21hbmFnZXIvdGVhbScsIHRoaXMuZWRpdFRlYW1Gb3JtKS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLmVkaXRUZWFtRGlhbG9nVmlzaWJsZSA9IGZhbHNlCiAgICAgICAgICAgICAgICB0aGlzLmdldFRlYW1zKCkKICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcyhyZXMpCiAgICAgICAgICAgIH0pLmNhdGNoKGVyciA9PiB0aGlzLiRtZXNzYWdlKHttZXNzYWdlOiBlcnIsIHR5cGU6ICdlcnJvcid9KSkKICAgICAgICB9LAoKICAgICAgICBvblJlc2V0UGFzc3dvcmQodGVhbUlEKSB7CiAgICAgICAgICAgIHRoaXMudXRpbHMuUE9TVCgnL21hbmFnZXIvdGVhbS9yZXNldFBhc3N3b3JkJywgewogICAgICAgICAgICAgICAgSUQ6IHRlYW1JRAogICAgICAgICAgICB9KS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLmVkaXRUZWFtRGlhbG9nVmlzaWJsZSA9IGZhbHNlCiAgICAgICAgICAgICAgICB0aGlzLiRhbGVydChyZXMsIHRoaXMuJGkxOG4udCgndGVhbS5uZXdfcGFzc3dvcmQnKSwgewogICAgICAgICAgICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiB0aGlzLiRpMThuLnQoJ2dlbmVyYWwuYXBwbHknKQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfSkuY2F0Y2goZXJyID0+IHRoaXMuJG1lc3NhZ2Uoe21lc3NhZ2U6IGVyciwgdHlwZTogJ2Vycm9yJ30pKQogICAgICAgIH0sCgogICAgICAgIGhhbmRsZURlbGV0ZShyb3cpIHsKICAgICAgICAgICAgdGhpcy51dGlscy5ERUxFVEUoIi9tYW5hZ2VyL3RlYW0/aWQ9IiArIHJvdy5JRCkudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogcmVzLAogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB0aGlzLmdldFRlYW1zKCkKICAgICAgICAgICAgfSkuY2F0Y2goZXJyID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGVyciwKICAgICAgICAgICAgICAgICAgICB0eXBlOiAnZXJyb3InCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSkKICAgICAgICB9CiAgICB9LAp9Cg=="},{"version":3,"sources":["Team.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Team.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <el-button type=\"primary\" @click=\"newTeamDialogVisible = true\">{{$t('team.add')}}</el-button>\n        <el-table :data=\"teamList\" style=\"width: 100%\" stripe v-loading=\"teamList === null\">\n            <el-table-column width=\"80\" prop=\"ID\" label=\"ID\"/>\n            <el-table-column width=\"80\" prop=\"Logo\" :label=\"$t('team.logo')\">\n                <template slot-scope=\"scope\">\n                    <el-image style=\"width: 50px; height: 50px\" :src=\"utils.baseURL + '/uploads/' + scope.row.Logo\"\n                              fit=\"fill\"/>\n                </template>\n            </el-table-column>\n\n            <el-table-column prop=\"Name\" :label=\"$t('team.team_name')\"/>\n            <el-table-column prop=\"Score\" :label=\"$t('team.score')\" :formatter=\"(row) => utils.FormatFloat(row.Score)\"/>\n            <el-table-column width=\"300\" prop=\"SecretKey\" label=\"Token\"/>\n            <el-table-column :label=\"$t('general.create_at')\" width=\"200\"\n                             :formatter=\"(row)=>utils.FormatGoTime(row.CreatedAt)\"/>\n            <el-table-column :label=\"$t('general.update_at')\" width=\"200\"\n                             :formatter=\"(row)=>utils.FormatGoTime(row.UpdatedAt)\"/>\n            <el-table-column :label=\"$t('general.operate')\">\n                <template slot-scope=\"scope\">\n                    <el-button\n                            size=\"mini\"\n                            @click=\"()=>{editTeamForm = JSON.parse(JSON.stringify(scope.row)); editTeamDialogVisible = true}\">\n                        {{$t('general.edit')}}\n                    </el-button>\n\n                    <el-popconfirm\n                            :confirmButtonText=\"$t('general.confirm_cancel')\"\n                            :cancelButtonText=\"$t('general.cancel')\"\n                            icon=\"el-icon-info\"\n                            iconColor=\"red\"\n                            :title=\"$t('team.delete_confirm')\"\n                            @onConfirm=\"handleDelete(scope.row)\"\n                    >\n                        <el-button size=\"mini\" type=\"danger\" slot=\"reference\">{{$t('general.delete')}}</el-button>\n                    </el-popconfirm>\n                </template>\n            </el-table-column>\n        </el-table>\n\n        <!-- New team -->\n        <el-dialog :title=\"$t('team.add')\" :visible.sync=\"newTeamDialogVisible\">\n            <el-button @click=\"newTeamForm.push({Name: '',Logo: ''})\">{{$t('team.new')}}</el-button>\n            <el-divider/>\n            <div v-for=\"(item, index) in newTeamForm\" v-bind:key=\"index\">\n                <el-row :gutter=\"20\">\n                    <el-form :model=\"item\" label-width=\"80px\">\n                        <el-button type=\"danger\" icon=\"el-icon-delete\" circle @click=\"newTeamForm.splice(index, 1)\"/>\n                        <el-col :span=\"10\">\n                            <el-form-item :label=\"$t('team.team_name')\">\n                                <el-input v-model=\"item.Name\"/>\n                                <el-input v-model=\"item.Logo\" size=\"mini\" :placeholder=\"$t('team.picture_url')\"/>\n                            </el-form-item>\n                        </el-col>\n                        <el-col :span=\"10\">\n                            <el-form-item :label=\"$t('team.team_logo')\">\n                                <el-upload name=\"picture\" :action=\"utils.baseURL + '/manager/uploadPicture'\"\n                                           :headers=\"{'Authorization': token}\"\n                                           :on-success=\"(response) => {newTeamForm[index].Logo = response.data}\">\n                                    <el-button size=\"small\" type=\"primary\">{{$t('team.upload')}}</el-button>\n                                    <div slot=\"tip\" class=\"el-upload__tip\">{{$t('team.file_limit')}}</div>\n                                </el-upload>\n                            </el-form-item>\n                        </el-col>\n                    </el-form>\n                </el-row>\n            </div>\n            <el-button type=\"primary\" @click=\"onNewTeams\">{{$t('team.add')}}</el-button>\n        </el-dialog>\n\n        <!-- Edit team -->\n        <el-dialog :title=\"$t('team.edit')\" :visible.sync=\"editTeamDialogVisible\">\n            <el-form label-width=\"80px\">\n                <el-form-item :label=\"$t('team.team_name')\">\n                    <el-input v-model=\"editTeamForm.Name\"/>\n                    <el-input v-model=\"editTeamForm.Logo\" size=\"mini\" :placeholder=\"$t('team.picture_url')\"/>\n                </el-form-item>\n                <el-form-item :label=\"$t('team.team_logo')\">\n                    <el-upload name=\"picture\" :action=\"utils.baseURL + '/manager/uploadPicture'\"\n                               :headers=\"{'Authorization': token}\"\n                               :on-success=\"(response) => {editTeamForm.Logo = response.data}\">\n                        <el-button size=\"small\" type=\"primary\">{{$t('team.upload')}}</el-button>\n                        <div slot=\"tip\" class=\"el-upload__tip\">{{$t('team.file_limit')}}</div>\n                    </el-upload>\n                </el-form-item>\n                <el-form-item>\n                    <el-button type=\"primary\" @click=\"onEditTeam\">{{$t('team.edit')}}</el-button>\n                    <el-popconfirm\n                            :title=\"$t('team.reset_password_confirm')\"\n                            :confirmButtonText=\"$t('general.apply')\"\n                            :cancelButtonText=\"$t('general.cancel')\"\n                            @onConfirm=\"onResetPassword(editTeamForm.ID)\"\n                    >\n                        <el-button slot=\"reference\">{{$t('team.reset_password')}}</el-button>\n                    </el-popconfirm>\n                </el-form-item>\n            </el-form>\n        </el-dialog>\n\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"Team\",\n        data: () => ({\n            teamList: null,\n            newTeamDialogVisible: false,\n            editTeamDialogVisible: false,\n\n            token: localStorage.getItem('managerToken'),\n\n            newTeamForm: [{\n                Name: '',\n                Logo: '',\n            }],\n\n            editTeamForm: {\n                Name: '',\n                Logo: '',\n            }\n        }),\n\n        mounted() {\n            this.getTeams()\n        },\n\n        methods: {\n            getTeams() {\n                this.utils.GET(\"/manager/teams\").then(res => {\n                    this.teamList = res\n                }).catch(err => this.$message.error(err))\n            },\n\n            onNewTeams() {\n                this.utils.POST('/manager/teams', this.newTeamForm).then(res => {\n                    this.newTeamDialogVisible = false\n                    this.getTeams()\n                    // Clean form\n                    this.newTeamForm = [{\n                        Name: '',\n                        Logo: '',\n                    }]\n\n                    const h = this.$createElement;\n                    var password = [h('p', null, this.$i18n.t('team.save_password'))]\n                    res.forEach(item => {\n                        password.push(h('p', null, this.$i18n.t('team.account_detail', {\n                            Name: item.Name,\n                            Password: item.Password\n                        })))\n                    })\n\n                    this.$alert(h('p', null, password), this.$i18n.t('team.team_password'), {\n                        confirmButtonText: this.$i18n.t('team.save_confirm')\n                    });\n                }).catch(err => this.$message({message: err, type: 'error'}))\n            },\n\n            onEditTeam() {\n                this.utils.PUT('/manager/team', this.editTeamForm).then(res => {\n                    this.editTeamDialogVisible = false\n                    this.getTeams()\n                    this.$message.success(res)\n                }).catch(err => this.$message({message: err, type: 'error'}))\n            },\n\n            onResetPassword(teamID) {\n                this.utils.POST('/manager/team/resetPassword', {\n                    ID: teamID\n                }).then(res => {\n                    this.editTeamDialogVisible = false\n                    this.$alert(res, this.$i18n.t('team.new_password'), {\n                        confirmButtonText: this.$i18n.t('general.apply')\n                    })\n                }).catch(err => this.$message({message: err, type: 'error'}))\n            },\n\n            handleDelete(row) {\n                this.utils.DELETE(\"/manager/team?id=\" + row.ID).then(res => {\n                    this.$message({\n                        message: res,\n                        type: 'success'\n                    });\n                    this.getTeams()\n                }).catch(err => {\n                    this.$message({\n                        message: err,\n                        type: 'error'\n                    });\n                })\n            }\n        },\n    }\n</script>\n\n<style scoped>\n\n</style>"]}]}